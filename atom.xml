<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[:baopham]]></title>
  <link href="http://baopham.github.io/atom.xml" rel="self"/>
  <link href="http://baopham.github.io/"/>
  <updated>2016-04-03T23:15:43-07:00</updated>
  <id>http://baopham.github.io/</id>
  <author>
    <name><![CDATA[Bao Pham]]></name>
    <email><![CDATA[gbaopham@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Behat, Selenium and VirtualBox]]></title>
    <link href="http://baopham.github.io/blog/2016/04/03/behat-selenium-and-virtualbox/"/>
    <updated>2016-04-03T22:57:47-07:00</updated>
    <id>http://baopham.github.io/blog/2016/04/03/behat-selenium-and-virtualbox</id>
    <content type="html"><![CDATA[<p>If you want to run selenium server on the host machine and behat in VirtualBox, this setup could work for you:</p>

<figure class='code'><figcaption><span>behat.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">default</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="l-Scalar-Plain">extensions</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">Behat\MinkExtension</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">base_url</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">https://foobar.dev</span>
</span><span class='line'>    <span class="l-Scalar-Plain">default_session</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">laravel</span>
</span><span class='line'>    <span class="l-Scalar-Plain">laravel</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">~</span>
</span><span class='line'>    <span class="l-Scalar-Plain">selenium2</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">wd_host</span><span class="p-Indicator">:</span> <span class="s">&quot;http://selenium-server.dev:4444/wd/hub&quot;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">browser_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">chrome</span>
</span></code></pre></td></tr></table></div></figure>


<p>In your virtualbox, edit the <code>/etc/hosts</code> and add a line:</p>

<figure class='code'><figcaption><span>/etc/hosts</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>10.0.2.2 selenium-server.dev
</span></code></pre></td></tr></table></div></figure>


<p>Then run your selenium server on your host machine.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWS CloudFormation Reusable Variables]]></title>
    <link href="http://baopham.github.io/blog/2016/02/12/aws-cloudformation-reusable-variables/"/>
    <updated>2016-02-12T07:46:33-08:00</updated>
    <id>http://baopham.github.io/blog/2016/02/12/aws-cloudformation-reusable-variables</id>
    <content type="html"><![CDATA[<p>Here is a way to create reusable strings / numbers / etc. in CloudFormation.</p>

<p>1 &ndash; Create Lambda resource to build the values you need.</p>

<p>2 &ndash; Create a custom resource to store the value returned from the Lambda</p>

<p>Example: Here we have a custom resource <code>AppInfo</code> to hold the App information.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="s2">&quot;Resources&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;AppInfo&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;Type&quot;</span><span class="o">:</span> <span class="s2">&quot;Custom::AppInfo&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;Properties&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;ServiceToken&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;Fn::GetAtt&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;GetAppInfo&quot;</span><span class="p">,</span> <span class="s2">&quot;Arn&quot;</span><span class="p">]</span> <span class="p">},</span>
</span><span class='line'>      <span class="s2">&quot;BuildVersion&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;Ref&quot;</span><span class="o">:</span> <span class="s2">&quot;BuildVersion&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s2">&quot;GetAppInfo&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;Type&quot;</span><span class="o">:</span> <span class="s2">&quot;AWS::Lambda::Function&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;Properties&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;Handler&quot;</span><span class="o">:</span> <span class="s2">&quot;index.handler&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;Role&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;Fn::GetAtt&quot;</span> <span class="o">:</span> <span class="p">[</span><span class="s2">&quot;LambdaExecutionRole&quot;</span><span class="p">,</span> <span class="s2">&quot;Arn&quot;</span><span class="p">]</span> <span class="p">},</span>
</span><span class='line'>      <span class="s2">&quot;Code&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;ZipFile&quot;</span><span class="o">:</span>  <span class="p">{</span> <span class="s2">&quot;Fn::Join&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="p">[</span>
</span><span class='line'>          <span class="s2">&quot;var response = require(&#39;cfn-response&#39;);&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;exports.handler = function(event, context) {&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;   var username = &#39;&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>              <span class="s2">&quot;Fn::Join&quot;</span><span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;_&quot;</span><span class="p">,</span> <span class="p">[</span> <span class="p">{</span><span class="s2">&quot;Ref&quot;</span><span class="o">:</span> <span class="s2">&quot;AppName&quot;</span><span class="p">},</span> <span class="p">{</span><span class="s2">&quot;Ref&quot;</span><span class="o">:</span> <span class="s2">&quot;AppEnv&quot;</span><span class="p">}</span> <span class="p">]</span> <span class="p">]</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="s2">&quot;&#39;;&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;   var email = &#39;&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="p">{</span>
</span><span class='line'>              <span class="s2">&quot;Fn::Join&quot;</span><span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="p">[</span> <span class="p">{</span><span class="s2">&quot;Ref&quot;</span><span class="o">:</span> <span class="s2">&quot;AppName&quot;</span><span class="p">},</span> <span class="s2">&quot;+&quot;</span><span class="p">,</span> <span class="p">{</span><span class="s2">&quot;Ref&quot;</span><span class="o">:</span> <span class="s2">&quot;AppEnv&quot;</span><span class="p">},</span> <span class="s2">&quot;@gmail.com&quot;</span> <span class="p">]</span> <span class="p">]</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="s2">&quot;&#39;;&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;   var responseData = { Username: username, Email: email };&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;   response.send(event, context, response.SUCCESS, responseData);&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;};&quot;</span>
</span><span class='line'>          <span class="p">]]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="s2">&quot;Runtime&quot;</span><span class="o">:</span> <span class="s2">&quot;nodejs&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s2">&quot;LambdaExecutionRole&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;Type&quot;</span><span class="o">:</span> <span class="s2">&quot;AWS::IAM::Role&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;Properties&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;AssumeRolePolicyDocument&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;Version&quot;</span><span class="o">:</span> <span class="s2">&quot;2012-10-17&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;Statement&quot;</span><span class="o">:</span> <span class="p">[{</span> <span class="s2">&quot;Effect&quot;</span><span class="o">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span> <span class="s2">&quot;Principal&quot;</span><span class="o">:</span> <span class="p">{</span><span class="s2">&quot;Service&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;lambda.amazonaws.com&quot;</span><span class="p">]},</span> <span class="s2">&quot;Action&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;sts:AssumeRole&quot;</span><span class="p">]</span> <span class="p">}]</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="s2">&quot;Path&quot;</span><span class="o">:</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;Policies&quot;</span><span class="o">:</span> <span class="p">[{</span>
</span><span class='line'>        <span class="s2">&quot;PolicyName&quot;</span><span class="o">:</span> <span class="s2">&quot;root&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;PolicyDocument&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;Version&quot;</span><span class="o">:</span> <span class="s2">&quot;2012-10-17&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;Statement&quot;</span><span class="o">:</span> <span class="p">[{</span> <span class="s2">&quot;Effect&quot;</span><span class="o">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span> <span class="s2">&quot;Action&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;logs:*&quot;</span><span class="p">],</span> <span class="s2">&quot;Resource&quot;</span><span class="o">:</span> <span class="s2">&quot;arn:aws:logs:*:*:*&quot;</span> <span class="p">}]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>3 &ndash; Reference the custom resource with <code>Fn::GetAtt</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span> <span class="s2">&quot;Fn::GetAtt&quot;</span><span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;AppInfo&quot;</span><span class="p">,</span> <span class="s2">&quot;Username&quot;</span> <span class="p">]</span> <span class="p">},</span>
</span><span class='line'><span class="p">{</span> <span class="s2">&quot;Fn::GetAtt&quot;</span><span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;AppInfo&quot;</span><span class="p">,</span> <span class="s2">&quot;Email&quot;</span> <span class="p">]</span> <span class="p">}</span>
</span><span class='line'><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>4 &ndash; Create a parameter <code>BuildVersion</code>. This is the key to make sure the custom resource <code>AppInfo</code> is updated when you update your parameters <code>AppName</code> or <code>AppEnv</code>. Without it, when you update these 2 parameters, CloudFormation will only update Lambda function and leave the resource <code>AppInfo</code> the same without sending another request to <code>GetAppInfo</code> for the latest value.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="s2">&quot;Parameters&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;BuildVersion&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;Description&quot;</span><span class="o">:</span> <span class="s2">&quot;Build Version. Needs to be different everytime you make an update&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;Type&quot;</span><span class="o">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;MinLength&quot;</span><span class="o">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A DynamoDb Wrapper for Laravel Model]]></title>
    <link href="http://baopham.github.io/blog/2015/09/22/a-dynamodb-wrapper-for-laravel-model/"/>
    <updated>2015-09-22T00:21:39-07:00</updated>
    <id>http://baopham.github.io/blog/2015/09/22/a-dynamodb-wrapper-for-laravel-model</id>
    <content type="html"><![CDATA[<p>With this package <a href="https://packagist.org/packages/baopham/dynamodb">baopham/dynamodb</a>, you can do:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">class</span> <span class="nc">Campaign</span> <span class="k">extends</span> <span class="nx">BaoPham\DynamoDb\DynamoDbModel</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">protected</span> <span class="nv">$table</span> <span class="o">=</span> <span class="s1">&#39;dynamodb_table_for_campaign&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">protected</span> <span class="nv">$fillable</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;description&#39;</span><span class="p">,</span> <span class="s1">&#39;status&#39;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$campaign</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Campaign</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$campaign</span><span class="o">-&gt;</span><span class="na">find</span><span class="p">(</span><span class="s1">&#39;campaign-id&#39;</span><span class="p">);</span> <span class="c1">// it&#39;s best to use UUID instead of incremented id - less work since you have to set the id attribute yourself.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// or</span>
</span><span class='line'><span class="nv">$campaign</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;foo&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;status&#39;</span><span class="p">,</span> <span class="k">true</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// or</span>
</span><span class='line'><span class="nv">$campaign</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// or</span>
</span><span class='line'><span class="nv">$campaign</span><span class="o">-&gt;</span><span class="na">update</span><span class="p">([</span><span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;foo2&#39;</span><span class="p">,</span> <span class="s1">&#39;description&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;bar2&#39;</span><span class="p">,</span> <span class="s1">&#39;status&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// or</span>
</span><span class='line'><span class="nv">$campaign</span><span class="o">-&gt;</span><span class="na">find</span><span class="p">(</span><span class="s1">&#39;campaign-id&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">delete</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>For more, <code>README</code>, tests and code are available here: <a href="https://github.com/baopham/laravel-dynamodb">https://github.com/baopham/laravel-dynamodb</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel - Upload to a Non-default S3 Bucket]]></title>
    <link href="http://baopham.github.io/blog/2015/09/22/laravel-upload-to-a-non-default-s3-bucket/"/>
    <updated>2015-09-22T00:11:45-07:00</updated>
    <id>http://baopham.github.io/blog/2015/09/22/laravel-upload-to-a-non-default-s3-bucket</id>
    <content type="html"><![CDATA[<p>Very easy. Define a new &ldquo;disk&rdquo; in <code>config/filesystems.php</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'>    <span class="s1">&#39;s3-stage&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>        <span class="s1">&#39;driver&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;s3&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;key&#39;</span>    <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;S3_STAGE_KEY&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;secret&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;S3_STAGE_SECRET&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;region&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;S3_STAGE_REGION&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="s1">&#39;bucket&#39;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="s1">&#39;S3_STAGE_BUCKET&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="p">],</span>
</span></code></pre></td></tr></table></div></figure>


<p>But don&rsquo;t use <code>.</code> in your disk name as it will confuse with the array dot notation:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1"># Illuminate\Filesystem\FilesystemManager</span>
</span><span class='line'>
</span><span class='line'>   <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * Get the filesystem connection configuration.</span>
</span><span class='line'><span class="sd">     *</span>
</span><span class='line'><span class="sd">     * @param  string  $name</span>
</span><span class='line'><span class="sd">     * @return array</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">protected</span> <span class="k">function</span> <span class="nf">getConfig</span><span class="p">(</span><span class="nv">$name</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">app</span><span class="p">[</span><span class="s1">&#39;config&#39;</span><span class="p">][</span><span class="s2">&quot;filesystems.disks.</span><span class="si">{</span><span class="nv">$name</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then you can call: <code>Storage::disk('s3-stage')</code> like any other disk.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel + Angularjs: File Upload Pattern]]></title>
    <link href="http://baopham.github.io/blog/2015/03/22/laravel-plus-angularjs-file-upload-pattern/"/>
    <updated>2015-03-22T22:36:38-07:00</updated>
    <id>http://baopham.github.io/blog/2015/03/22/laravel-plus-angularjs-file-upload-pattern</id>
    <content type="html"><![CDATA[<p>The thing with uploading files via AJAX is that users can just keep uploading files to the server without having to save the form. This leaves a lot of junk files around if you don&rsquo;t clean them up later. But we don&rsquo;t want to delete the files that are actually being used. This means we need to keep records of uploaded files.</p>

<p>This pattern is working for me &ndash; assuming we want to keep files on S3:</p>

<!--more-->


<p><strong>1.</strong> A table to store records of uploaded files.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">// database/migrations/2015_03_05_004850_create_files_table.php</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">up</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nx">Schema</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="s1">&#39;files&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="nx">Blueprint</span> <span class="nv">$table</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="mi">36</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">primary</span><span class="p">();</span>
</span><span class='line'>        <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;mime&#39;</span><span class="p">,</span> <span class="mi">255</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;filename&#39;</span><span class="p">,</span> <span class="mi">255</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">bigInteger</span><span class="p">(</span><span class="s1">&#39;size&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">unsigned</span><span class="p">();</span>
</span><span class='line'>        <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;storage_path&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">unique</span><span class="p">();</span>
</span><span class='line'>        <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">string</span><span class="p">(</span><span class="s1">&#39;disk&#39;</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">boolean</span><span class="p">(</span><span class="s1">&#39;status&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$table</span><span class="o">-&gt;</span><span class="na">timestamps</span><span class="p">();</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// app/Models/File.php</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">CRT\Models\BaseModel</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Illuminate\Support\Facades\Storage</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">File</span> <span class="k">extends</span> <span class="nx">BaseModel</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">protected</span> <span class="nv">$fillable</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;mime&#39;</span><span class="p">,</span> <span class="s1">&#39;storage_path&#39;</span><span class="p">,</span> <span class="s1">&#39;status&#39;</span><span class="p">,</span> <span class="s1">&#39;filename&#39;</span><span class="p">,</span> <span class="s1">&#39;size&#39;</span><span class="p">,</span> <span class="s1">&#39;disk&#39;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">boot</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">parent</span><span class="o">::</span><span class="na">boot</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">static</span><span class="o">::</span><span class="na">deleting</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="nv">$model</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nx">Storage</span><span class="o">::</span><span class="na">disk</span><span class="p">(</span><span class="nv">$model</span><span class="o">-&gt;</span><span class="na">disk</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">delete</span><span class="p">(</span><span class="nv">$model</span><span class="o">-&gt;</span><span class="na">storage_path</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>2.</strong> Use Javascript library to upload files thru AJAX (<a href="https://github.com/flowjs">Flowjs</a>, <a href="http://www.dropzonejs.com/">Dropzonejs</a>, etc.)</p>

<p><strong>3.</strong> In the controller&rsquo;s upload method:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">// app/Http/Controllers/FileUploadController.php</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">CRT\Models\File</span> <span class="k">as</span> <span class="nx">FileModel</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Flow\Config</span> <span class="k">as</span> <span class="nx">FlowConfig</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Flow\Request</span> <span class="k">as</span> <span class="nx">FlowRequest</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Flow\ConfigInterface</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Flow\RequestInterface</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">upload</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$config</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FlowConfig</span><span class="p">();</span>
</span><span class='line'>    <span class="nv">$config</span><span class="o">-&gt;</span><span class="na">setTempDir</span><span class="p">(</span><span class="nx">storage_path</span><span class="p">()</span> <span class="o">.</span> <span class="s1">&#39;/tmp&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$config</span><span class="o">-&gt;</span><span class="na">setDeleteChunksOnSave</span><span class="p">(</span><span class="k">false</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FlowRequest</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$totalSize</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">getTotalSize</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$totalSize</span> <span class="o">&amp;&amp;</span> <span class="nv">$totalSize</span> <span class="o">&gt;</span> <span class="p">(</span><span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">4</span><span class="p">))</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">responseWithError</span><span class="p">(</span><span class="s1">&#39;File size exceeds 4MB&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$uploadFile</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">getFile</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">list</span><span class="p">(</span><span class="nv">$path</span><span class="p">,</span> <span class="nv">$destination</span><span class="p">)</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDestinationPathInfo</span><span class="p">(</span><span class="nv">$uploadFile</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// @see: http://baopham.github.io/blog/2015/03/16/laravel-merge-flowjs-chunks-directly-to-s3</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">\Bao\Flow\Basic</span><span class="o">::</span><span class="na">save</span><span class="p">(</span><span class="nv">$destination</span><span class="p">,</span> <span class="nv">$config</span><span class="p">,</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">s3Client</span><span class="p">))</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$file</span> <span class="o">=</span> <span class="nx">FileModel</span><span class="o">::</span><span class="na">create</span><span class="p">([</span>
</span><span class='line'>            <span class="s1">&#39;mime&#39;</span> <span class="o">=&gt;</span> <span class="nv">$uploadFile</span><span class="p">[</span><span class="s1">&#39;type&#39;</span><span class="p">],</span>
</span><span class='line'>            <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">getTotalSize</span><span class="p">(),</span>
</span><span class='line'>            <span class="s1">&#39;storage_path&#39;</span> <span class="o">=&gt;</span> <span class="nv">$path</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;filename&#39;</span> <span class="o">=&gt;</span> <span class="nv">$uploadFile</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">],</span>
</span><span class='line'>            <span class="s1">&#39;disk&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;s3&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;status&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
</span><span class='line'>        <span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Send JSON response.</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">responseWithData</span><span class="p">(</span><span class="nv">$file</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Indicate that we are not done with all the chunks.</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">responseWithData</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="mi">204</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This will save the <a href="http://baopham.github.io/blog/2015/03/16/laravel-merge-flowjs-chunks-directly-to-s3/">uploaded file to S3 directly</a>.</p>

<p><strong>4.</strong> Angular side will store the response that has the file&rsquo;s info (id, size, filename, etc.) &ndash; mark this file as new, e.g:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// public/assets/js/thing/controller.js</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">vm</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'><span class="nx">vm</span><span class="p">.</span><span class="nx">processFileSuccess</span> <span class="o">=</span> <span class="nx">processFileSuccess</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ...</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">processFileSuccess</span><span class="p">(</span><span class="nx">file</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">file</span><span class="p">.</span><span class="nx">isNew</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">vm</span><span class="p">.</span><span class="nx">files</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">file</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>5.</strong> When user saves the form, we submit the form including the file&rsquo;s info.</p>

<p><strong>6.</strong> Then in the backend, we process the file and mark the file&rsquo;s status as <code>true</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$store</span> <span class="o">=</span> <span class="nx">Input</span><span class="o">::</span><span class="na">all</span><span class="p">();</span>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="nv">$store</span><span class="p">[</span><span class="s1">&#39;files&#39;</span><span class="p">]</span> <span class="k">as</span> <span class="o">&amp;</span><span class="nv">$fileInput</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">array_get</span><span class="p">(</span><span class="nv">$fileInput</span><span class="p">,</span> <span class="s1">&#39;isNew&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$file</span> <span class="o">=</span> <span class="nx">FileModel</span><span class="o">::</span><span class="na">find</span><span class="p">(</span><span class="nv">$fileInput</span><span class="p">[</span><span class="s1">&#39;id&#39;</span><span class="p">]);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$file</span><span class="o">-&gt;</span><span class="na">disk</span> <span class="o">==</span> <span class="s1">&#39;s3&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// move file to a different S3 folder</span>
</span><span class='line'>            <span class="o">...</span>
</span><span class='line'>            <span class="c1">// update file&#39;s storage path and status</span>
</span><span class='line'>            <span class="nv">$file</span><span class="o">-&gt;</span><span class="na">storage_path</span> <span class="o">=</span> <span class="o">...</span><span class="p">;</span>
</span><span class='line'>            <span class="nv">$file</span><span class="o">-&gt;</span><span class="na">status</span> <span class="o">=</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>            <span class="nv">$file</span><span class="o">-&gt;</span><span class="na">save</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// upload local file to S3 then update the file&#39;s record if needed or just delete it:</span>
</span><span class='line'>            <span class="nv">$file</span><span class="o">-&gt;</span><span class="na">delete</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">// update the file input info before saving it to DB - store the S3 URL for example:</span>
</span><span class='line'>        <span class="nv">$fileInput</span><span class="p">[</span><span class="s1">&#39;url&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="o">...</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// then save $store in DB.</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>7.</strong> Create a command to clean up tmp files that are older than x hours: <code>php artisan make:console CleanupFiles</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">// app/Console/Commands/CleanupFiles.php</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * The console command name.</span>
</span><span class='line'><span class="sd"> *</span>
</span><span class='line'><span class="sd"> * @var string</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">protected</span> <span class="nv">$name</span> <span class="o">=</span> <span class="s1">&#39;files:clean&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * Execute the console command.</span>
</span><span class='line'><span class="sd"> *</span>
</span><span class='line'><span class="sd"> * @return mixed</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">fire</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$date</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DateTime</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$date</span><span class="o">-&gt;</span><span class="na">modify</span><span class="p">(</span><span class="s1">&#39;-3 hours&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$formatted</span> <span class="o">=</span> <span class="nv">$date</span><span class="o">-&gt;</span><span class="na">format</span><span class="p">(</span><span class="s1">&#39;Y-m-d H:i:s&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">FileModel</span><span class="o">::</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;updated_at&#39;</span><span class="p">,</span> <span class="s1">&#39;&lt;=&#39;</span><span class="p">,</span> <span class="nv">$formatted</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;status&#39;</span><span class="p">,</span> <span class="s1">&#39;=&#39;</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span><span class="na">get</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">each</span><span class="p">(</span><span class="k">function</span><span class="p">(</span><span class="nv">$file</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nv">$file</span><span class="o">-&gt;</span><span class="na">delete</span><span class="p">();</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">\Flow\Uploader</span><span class="o">::</span><span class="na">pruneChunks</span><span class="p">(</span><span class="nx">config</span><span class="p">(</span><span class="s1">&#39;filesystems.disks.local.root&#39;</span><span class="p">)</span> <span class="o">.</span> <span class="s1">&#39;/tmp&#39;</span><span class="p">,</span> <span class="mi">3</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">info</span><span class="p">(</span><span class="s1">&#39;Files older than 3 hours have been cleaned up.&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Set a scheduler for it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">// app/Console/Kernel.php</span>
</span><span class='line'>
</span><span class='line'><span class="k">protected</span> <span class="nv">$commands</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>    <span class="s1">&#39;CRT\Console\Commands\CleanupFiles&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">protected</span> <span class="k">function</span> <span class="nf">schedule</span><span class="p">(</span><span class="nx">Schedule</span> <span class="nv">$schedule</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$schedule</span><span class="o">-&gt;</span><span class="na">command</span><span class="p">(</span><span class="s1">&#39;files:clean&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">hourly</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then setup cronjob:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">*</span> <span class="o">*</span> <span class="o">*</span> <span class="o">*</span> <span class="o">*</span> <span class="nx">php</span> <span class="o">/</span><span class="nx">home</span><span class="o">/</span><span class="nx">vagrant</span><span class="o">/</span><span class="nx">projects</span><span class="o">/</span><span class="nx">CRT</span><span class="o">/</span><span class="nx">artisan</span> <span class="nx">schedule</span><span class="o">:</span><span class="nx">run</span> <span class="mi">1</span><span class="o">&gt;&gt;</span> <span class="o">/</span><span class="nx">dev</span><span class="o">/</span><span class="k">null</span> <span class="mi">2</span><span class="o">&gt;&amp;</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel - Merge Flowjs Chunks Directly to S3]]></title>
    <link href="http://baopham.github.io/blog/2015/03/16/laravel-merge-flowjs-chunks-directly-to-s3/"/>
    <updated>2015-03-16T23:02:03-07:00</updated>
    <id>http://baopham.github.io/blog/2015/03/16/laravel-merge-flowjs-chunks-directly-to-s3</id>
    <content type="html"><![CDATA[<p><strong>Motivation</strong>: <a href="http://laravel.com/docs/5.0/filesystem">Laravel 5</a> now has support for Cloud storage.</p>

<p><strong>Problem</strong>: <a href="https://github.com/flowjs/flow.js">Flowjs</a> library allows files to be uploaded in chunks making it possible to upload large files but by default it <a href="https://github.com/flowjs/flow-php-server/blob/84c928090c060238d15e89dd7e252acf8eff1140/src/Flow/File.php#L147">saves the final file to local storage</a>.</p>

<p>We could extend this class so that it uses <a href="http://docs.aws.amazon.com/aws-sdk-php/guide/latest/feature-s3-stream-wrapper.html">S3 Stream Wrapper</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span> <span class="k">namespace</span> <span class="nx">Bao\Flow</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Flow\ConfigInterface</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Flow\RequestInterface</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Flow\FileOpenException</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Flow\FileLockException</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Illuminate\Support\Facades\Storage</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">League\Flysystem\FilesystemInterface</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Aws\S3\S3Client</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Exception</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">File</span> <span class="k">extends</span> <span class="nx">\Flow\File</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * @var \Flow\RequestInterface</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">private</span> <span class="nv">$request</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * @var \Flow\ConfigInterface</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">private</span> <span class="nv">$config</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * @var \Aws\S3\S3Client</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">private</span> <span class="nv">$s3Client</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nx">ConfigInterface</span> <span class="nv">$config</span><span class="p">,</span> <span class="nx">RequestInterface</span> <span class="nv">$request</span> <span class="o">=</span> <span class="k">null</span><span class="p">,</span> <span class="nx">S3Client</span> <span class="nv">$s3Client</span> <span class="o">=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">parent</span><span class="o">::</span><span class="na">__construct</span><span class="p">(</span><span class="nv">$config</span><span class="p">,</span> <span class="nv">$request</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">config</span> <span class="o">=</span> <span class="nv">$config</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">request</span> <span class="o">=</span> <span class="nv">$request</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">s3Client</span> <span class="o">=</span> <span class="nv">$s3Client</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">/**</span>
</span><span class='line'><span class="sd">     * Merge all chunks to single file</span>
</span><span class='line'><span class="sd">     *</span>
</span><span class='line'><span class="sd">     * @param string $destination final file location</span>
</span><span class='line'><span class="sd">     *</span>
</span><span class='line'><span class="sd">     * @throws FileLockException</span>
</span><span class='line'><span class="sd">     * @throws FileOpenException</span>
</span><span class='line'><span class="sd">     * @throws \Exception</span>
</span><span class='line'><span class="sd">     *</span>
</span><span class='line'><span class="sd">     * @return bool indicates if file was saved</span>
</span><span class='line'><span class="sd">     */</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">save</span><span class="p">(</span><span class="nv">$destination</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$toS3</span> <span class="o">=</span> <span class="o">!</span><span class="k">empty</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">s3Client</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$local</span> <span class="o">=</span> <span class="o">!</span><span class="nv">$toS3</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$toS3</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">starts_with</span><span class="p">(</span><span class="nv">$destination</span><span class="p">,</span> <span class="s1">&#39;s3://&#39;</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// @see http://docs.aws.amazon.com/aws-sdk-php/guide/latest/feature-s3-stream-wrapper.html</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nx">Exception</span><span class="p">(</span><span class="s1">&#39;Not a valid S3 protocol&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$toS3</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">s3Client</span><span class="o">-&gt;</span><span class="na">registerStreamWrapper</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$fh</span> <span class="o">=</span> <span class="nb">fopen</span><span class="p">(</span><span class="nv">$destination</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$fh</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nx">FileOpenException</span><span class="p">(</span><span class="s1">&#39;failed to open destination file: &#39;</span> <span class="o">.</span> <span class="nv">$destination</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$local</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nb">flock</span><span class="p">(</span><span class="nv">$fh</span><span class="p">,</span> <span class="nx">LOCK_EX</span> <span class="o">|</span> <span class="nx">LOCK_NB</span><span class="p">,</span> <span class="nv">$blocked</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// @codeCoverageIgnoreStart</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nv">$blocked</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="c1">// Concurrent request has requested a lock.</span>
</span><span class='line'>                <span class="c1">// File is being processed at the moment.</span>
</span><span class='line'>                <span class="c1">// Warning: lock is not checked in windows.</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="c1">// @codeCoverageIgnoreEnd</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nx">FileLockException</span><span class="p">(</span><span class="s1">&#39;failed to lock file: &#39;</span> <span class="o">.</span> <span class="nv">$destination</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$totalChunks</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">request</span><span class="o">-&gt;</span><span class="na">getTotalChunks</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nv">$preProcessChunk</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">config</span><span class="o">-&gt;</span><span class="na">getPreprocessCallback</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;=</span> <span class="nv">$totalChunks</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="nv">$file</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getChunkPath</span><span class="p">(</span><span class="nv">$i</span><span class="p">);</span>
</span><span class='line'>                <span class="nv">$chunk</span> <span class="o">=</span> <span class="nb">fopen</span><span class="p">(</span><span class="nv">$file</span><span class="p">,</span> <span class="s2">&quot;rb&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$chunk</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="k">throw</span> <span class="k">new</span> <span class="nx">FileOpenException</span><span class="p">(</span><span class="s1">&#39;failed to open chunk: &#39;</span> <span class="o">.</span> <span class="nv">$file</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="nv">$preProcessChunk</span> <span class="o">!==</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>                <span class="p">{</span>
</span><span class='line'>                    <span class="nb">call_user_func</span><span class="p">(</span><span class="nv">$preProcessChunk</span><span class="p">,</span> <span class="nv">$chunk</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="nb">stream_copy_to_stream</span><span class="p">(</span><span class="nv">$chunk</span><span class="p">,</span> <span class="nv">$fh</span><span class="p">);</span>
</span><span class='line'>                <span class="nb">fclose</span><span class="p">(</span><span class="nv">$chunk</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">catch</span> <span class="p">(</span><span class="nx">\Exception</span> <span class="nv">$e</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nv">$local</span><span class="p">)</span> <span class="nb">flock</span><span class="p">(</span><span class="nv">$fh</span><span class="p">,</span> <span class="nx">LOCK_UN</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="nb">fclose</span><span class="p">(</span><span class="nv">$fh</span><span class="p">);</span>
</span><span class='line'>            <span class="k">throw</span> <span class="nv">$e</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">config</span><span class="o">-&gt;</span><span class="na">getDeleteChunksOnSave</span><span class="p">())</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">deleteChunks</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$local</span><span class="p">)</span> <span class="nb">flock</span><span class="p">(</span><span class="nv">$fh</span><span class="p">,</span> <span class="nx">LOCK_UN</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="nb">fclose</span><span class="p">(</span><span class="nv">$fh</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Command Line Interface for Vundle]]></title>
    <link href="http://baopham.github.io/blog/2014/05/29/a-command-line-interface-for-vundle/"/>
    <updated>2014-05-29T21:30:24-07:00</updated>
    <id>http://baopham.github.io/blog/2014/05/29/a-command-line-interface-for-vundle</id>
    <content type="html"><![CDATA[<p>I&rsquo;m a die hard fan of Vim and sometimes can be obsessed with trying out new plugins. I really like <a href="https://github.com/gmarik/Vundle.vim">Vundle</a> &ndash; a Vim plugin manager that simplifies plugin installation. I recently reorganized my <a href="https://github.com/baopham/vim/blob/master/vimrc">.vimrc</a> so that it&rsquo;s easier to keep track of my plugin configurations. My <a href="https://github.com/baopham/vim">.vim</a> folder now has a sub directory <code>settings</code> that contains different files for each plugin configuration:</p>

<!--more-->


<p><img src="http://f.cl.ly/items/2p3c0E1q3f053K0L1N2M/Screen%20Shot%202014-05-29%20at%209.53.32%20PM.png" class="center"></p>

<p>and <code>.vimrc</code> file will source these files one by one:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="k">for</span> fpath <span class="k">in</span> split<span class="p">(</span>globpath<span class="p">(</span><span class="s1">&#39;~/.vim/settings&#39;</span><span class="p">,</span> <span class="s1">&#39;*.vim&#39;</span><span class="p">),</span> <span class="s1">&#39;\n&#39;</span><span class="p">)</span>
</span><span class='line'>  exe <span class="s1">&#39;source&#39;</span> fpath
</span><span class='line'><span class="k">endfor</span>
</span></code></pre></td></tr></table></div></figure>


<p>The only problem is whenever I uninstall a plugin, I have to remember to remove the configuration file for that plugin in the <code>settings</code> directory. Of course I don&rsquo;t always remember, and so <a href="https://github.com/baopham/vundle-cli">Vundle CLI</a> is built for this.</p>

<p>To quote from the <code>README.md</code>:</p>

<blockquote><p>Available commands:</p>

<ul>
<li><code>rm</code> remove a plugin</li>
<li><code>list</code> list all installed plugins</li>
<li><code>find</code> find an installed plugin</li>
<li><code>clean</code> clean up unused plugin related files</li>
</ul>


<p><code>rm</code> will remove the line <code>Bundle plugin_name</code> or <code>Plugin plugin_name</code> in your <code>.vimrc</code>,
delete the configuration file for this plugin in the specified settings directory,
and the plugin folder. Before anything is deleted, the command will prompt you
for confirmation unless the <code>--force</code> switch is on.</p></blockquote>

<p>Rather than explaining what each command does, I think a gif would do a much better job:</p>

<p><img src="http://baopham.github.io/images/vundlecli.gif" alt="Vundle CLI gif" class="center"/></p>

<p>The locations of <code>.vimrc</code> file, <code>.vim</code> and <code>settings</code> directories can be specified with options <code>--vimrc</code>, <code>--vimdir</code>, <code>--settings</code> respectively.  Otherwise, the default values are <code>~/.vimrc</code>, <code>~/.vim</code>, and <code>~/.vim/settings</code>. It should also be able to follow symlinks.</p>

<p>I still need to write tests but I&rsquo;m leaving it for the future when I have more time and energy.</p>

<p><a href="https://github.com/baopham/vundle-cli">Vundle CLI</a> is a Ruby gem so to install it, run this in your terminal:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install vundle-cli
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TabRenderer - Quick Preview for Your Tabular Data]]></title>
    <link href="http://baopham.github.io/blog/2014/05/14/tabrenderer-quick-preview-for-your-tabular-data/"/>
    <updated>2014-05-14T20:05:26-07:00</updated>
    <id>http://baopham.github.io/blog/2014/05/14/tabrenderer-quick-preview-for-your-tabular-data</id>
    <content type="html"><![CDATA[<p>I recently learned from a friend that <a href="https://help.github.com/articles/rendering-csv-and-tsv-data">Github renders tabular data</a> (.csv and .tsv) as interactive table, which is really neat. However, it won&rsquo;t work if there&rsquo;s a mismatched column or illegal quoting so I quickly built a <a href="http://tabrenderer.herokuapp.com/">tabrenderer</a> to help people preview their data before pushing them to Github. At first, I was going to use JavaScript to parse the data but was afraid that it will not work the same way as Github&rsquo;s parser. After browsing their repos, I thought it&rsquo;s very likely that they use Ruby to do this given how often they use Ruby for their own projects. <!--more-->Besides, Ruby has its built-in class <a href="http://ruby-doc.org/stdlib-1.9.2/libdoc/csv/rdoc/CSV.html">CSV</a> that takes care of almost everything.</p>

<p>So far, <a href="http://tabrenderer.herokuapp.com/">tabrenderer</a> notifies users of errors that prevent the parser to work such as illegal quoting. It will jump to the row that has such errors but will not scream if there&rsquo;s a mismatched column (it will be obvious to the users though to see some rows don&rsquo;t have columns). The users can either upload their file or simply type the data in the text box.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thirsty? Google Map for a Drinking Fountain]]></title>
    <link href="http://baopham.github.io/blog/2014/01/02/thirsty-google-map-for-a-drinking-fountain/"/>
    <updated>2014-01-02T08:05:30-08:00</updated>
    <id>http://baopham.github.io/blog/2014/01/02/thirsty-google-map-for-a-drinking-fountain</id>
    <content type="html"><![CDATA[<p>Or you can head over to <a href="http://vancouverfountains.herokuapp.com/" title="Vancouver Fountain Finder">Vancouver Fountain Finder</a> and search for the nearest drinking fountain in Vancouver, BC.</p>

<p>This is a small project I built during the school break to learn <a href="http://nodejs.org/" title="Node.js">Node.js</a>. I have always wanted to learn <a href="http://nodejs.org/" title="Node.js">Node.js</a> and use <a href="gmap-v3">Google Maps API</a> so I tried to think of features that will let me learn new things as much as possible. Before this, I also built a simple <a href="http://bpmtimer.herokuapp.com/" title="Timer">timer</a> just to get started with <a href="http://nodejs.org/" title="Node.js">Node.js</a> and become familiar with <a href="http://knockoutjs.com/" title="Knockout.js">Knockout.js</a> and <a href="http://semantic-ui.com/" title="Semantic-UI">Semantic-UI</a>. <!--more-->I guess <a href="http://semantic-ui.com/" title="Semantic-UI">Semantic-UI</a> is still relatively new so I still prefer <a href="http://getbootstrap.com/" title="Bootstrap">Bootstrap</a> or maybe I am just biased&hellip; Anyway, a <a href="http://bpmtimer.herokuapp.com/" title="Timer">timer</a> because I saw my Math teacher struggling with the <a href="http://online-stopwatch.com/" title="Online Stopwatch">online stopwatch</a> before the exam&hellip; And the ads were quite distracting&hellip;</p>

<p>Just a quick update since now I&rsquo;m back to school. Back to studying.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Project Euler: Practice Your Math and Programming Skills]]></title>
    <link href="http://baopham.github.io/blog/2012/01/25/project-euler-practice-your-math-and-programming-skills/"/>
    <updated>2012-01-25T00:00:00-08:00</updated>
    <id>http://baopham.github.io/blog/2012/01/25/project-euler-practice-your-math-and-programming-skills</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve recently started to participate in this site <a href="http://projecteuler.net/">Project Euler</a>. It&rsquo;s a website with a series of mathematics/programming problems, ranging from easy to very hard. Some problems, if not solved using the right algorithm, can take more than 5 minutes to get the result. So it only matters if you use correct and efficient algorithms. These problems are meant to be solved in only less than a minute.</p>

<p>Check out my Git repository of my solutions (mostly in Python because I find it faster and neater to code) to some of the Euler questions: <a href="https://github.com/baopham/projectEuler">baopham/projectEuler</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chess]]></title>
    <link href="http://baopham.github.io/blog/2011/12/05/chess/"/>
    <updated>2011-12-05T00:00:00-08:00</updated>
    <id>http://baopham.github.io/blog/2011/12/05/chess</id>
    <content type="html"><![CDATA[<p>Want to play some chess? Here is a chess board for you written in HTML5 using the drag and drop feature. Make sure your browser supports HTML5. Now drag away!</p>

<p><strong>UPDATE:</strong> Now the chess rules are enforced. It won&rsquo;t move unless you follow the rules :)</p>

<!--more-->


<script src="http://baopham.github.io/javascripts/custom/chess.js" type="text/javascript"></script>




<div ondragstart="dragStart(event);" ondragover="return dragOver(event);" ondrop="return drop(event);">
    <table class="chess" border="1">
        <tr>
            <td id="1-rook" class="black odd" draggable="true">&#9820;</td>
            <td id="2-knight" class="black even" draggable="true">&#9822;</td>
            <td id="3-bishop" class="black odd" draggable="true">&#9821;</td>
            <td id="4-queen" class="black even" draggable="true">&#9819;</td>
            <td id="5-king" class="black odd" draggable="true">&#9818;</td>
            <td id="6-bishop" class="black even" draggable="true">&#9821;</td>
            <td id="7-knight" class="black odd" draggable="true">&#9822;</td>
            <td id="8-rook" class="black even" draggable="true">&#9820;</td>
        </tr>
        <tr>
            <td id="9-pawn" class="black even" draggable="true">&#9823;</td>
            <td id="10-pawn" class="black odd" draggable="true">&#9823;</td>
            <td id="11-pawn" class="black even" draggable="true">&#9823;</td>
            <td id="12-pawn" class="black odd" draggable="true">&#9823;</td>
            <td id="13-pawn" class="black even" draggable="true">&#9823;</td>
            <td id="14-pawn" class="black odd" draggable="true">&#9823;</td>
            <td id="15-pawn" class="black even" draggable="true">&#9823;</td>
            <td id="16-pawn" class="black odd" draggable="true">&#9823;</td>
        </tr>
        <tr>
            <td id="17" class="none odd">&nbsp;</td>
            <td id="18" class="none even">&nbsp;</td>
            <td id="19" class="none odd">&nbsp;</td>
            <td id="20" class="none even">&nbsp;</td>
            <td id="21" class="none odd">&nbsp;</td>
            <td id="22" class="none even">&nbsp;</td>
            <td id="23" class="none odd">&nbsp;</td>
            <td id="24" class="none even">&nbsp;</td>
        </tr>
        <tr>
            <td id="25" class="none even">&nbsp;</td>
            <td id="26" class="none odd">&nbsp;</td>
            <td id="27" class="none even">&nbsp;</td>
            <td id="28" class="none odd">&nbsp;</td>
            <td id="29" class="none even">&nbsp;</td>
            <td id="30" class="none odd">&nbsp;</td>
            <td id="31" class="none even">&nbsp;</td>
            <td id="32" class="none odd">&nbsp;</td>
        </tr>
        <tr>
            <td id="33" class="none odd">&nbsp;</td>
            <td id="34" class="none even">&nbsp;</td>
            <td id="35" class="none odd">&nbsp;</td>
            <td id="36" class="none even">&nbsp;</td>
            <td id="37" class="none odd">&nbsp;</td>
            <td id="38" class="none even">&nbsp;</td>
            <td id="39" class="none odd">&nbsp;</td>
            <td id="40" class="none even">&nbsp;</td>
        </tr>
        <tr>
            <td id="41" class="none even">&nbsp;</td>
            <td id="42" class="none odd">&nbsp;</td>
            <td id="43" class="none even">&nbsp;</td>
            <td id="44" class="none odd">&nbsp;</td>
            <td id="45" class="none even">&nbsp;</td>
            <td id="46" class="none odd">&nbsp;</td>
            <td id="47" class="none even">&nbsp;</td>
            <td id="48" class="none odd">&nbsp;</td>
        </tr>
        <tr>
            <td id="49-pawn" class="white odd" draggable="true">&#9817;</td>
            <td id="50-pawn" class="white even" draggable="true">&#9817;</td>
            <td id="51-pawn" class="white odd" draggable="true">&#9817;</td>
            <td id="52-pawn" class="white even" draggable="true">&#9817;</td>
            <td id="53-pawn" class="white odd" draggable="true">&#9817;</td>
            <td id="54-pawn" class="white even" draggable="true">&#9817;</td>
            <td id="55-pawn" class="white odd" draggable="true">&#9817;</td>
            <td id="56-pawn" class="white even" draggable="true">&#9817;</td>
        </tr>
        <tr>
            <td id="57-rook" class="white even" draggable="true">&#9814;</td>
            <td id="58-knight" class="white odd" draggable="true">&#9816;</td>
            <td id="59-bishop" class="white even" draggable="true">&#9815;</td>
            <td id="60-queen" class="white odd" draggable="true">&#9813;</td>
            <td id="61-king" class="white even" draggable="true">&#9812;</td>
            <td id="62-bishop" class="white odd" draggable="true">&#9815;</td>
            <td id="63-knight" class="white even" draggable="true">&#9816;</td>
            <td id="64-rook" class="white odd" draggable="true">&#9814;</td>
        </tr>
    </table>
</div>




<br>


<p><strong>BONUS:</strong> <a href="http://en.wikipedia.org/wiki/LocalStorage">HTML localStorage</a> and <a href="http://www.w3.org/TR/html5/editing.html#contenteditable">contentEditable</a>.
Features that allow you to edit a page&rsquo;s section on the browser and store your scribbles on the client-side database:</p>

<div id="editable-sec">
    <section id="editable" contenteditable="true" onkeyup="storeNotes(this.id);">
    </section>
    <div style="padding-top: 5px;">
        <input class="btn" type="button" id="resetChess" value="Reset game" />
        <input class="btn" type="button" id="clearNotes" value="Clear local storage" />
    </div>
    <small>Click &#8220;clear local storage&#8221; if you don&#8217;t want your notes to be remembered (If your notes are not remembered, it means your browser has <i>localStorage</i> turned off or doesn&#8217;t support it unfortunately)</small>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript: Matrix Calculator]]></title>
    <link href="http://baopham.github.io/blog/2011/11/27/javascript-matrix-calculator/"/>
    <updated>2011-11-27T00:00:00-08:00</updated>
    <id>http://baopham.github.io/blog/2011/11/27/javascript-matrix-calculator</id>
    <content type="html"><![CDATA[<div class="matrix-post">
  <p>A matrix calculator written in JavaScript :)</p>
  <div class="matrix">
    <div style="margin: 10px 0">
      <b>Matrix 1</b>
      <input style="float:right" class="add btn btn-default" type="button" value="+"/>
      <input style="float:right" class="remove btn btn-default" type="button" value="&#8211;"/>
    </div>
    <div class="matrixA inputMatrix">
      <div class="matrix-row">
    <input type="text" value="1, 2, 3"/>
      </div>
      <div class="matrix-row">
    <input type="text" value="4, 5, 6"/>
      </div>
      <div class="matrix-row">
    <input type="text" value="7, 8, 9"/>
      </div>
    </div>
  </div>
  <div class="matrix">
    <div style="margin: 10px 0">
      <b>Matrix 2</b>
      <input style="float: right;" class="add btn btn-default" type="button" value="+"/>
      <input style="float: right;" class="remove btn btn-default" type="button" value="&#8211;"/>
    </div>
    <div class="matrixB inputMatrix">
      <div class="matrix-row">
    <input type="text" value="1, 2, 3"/>
      </div>
      <div class="matrix-row">
    <input type="text" value="4, 5, 6"/>
      </div>
      <div class="matrix-row">
    <input type="text" value="7, 8, 9"/>
      </div>
    </div>
  </div>
  <div class="clearfix"></div>
  <div>
    <ul class="list-inline">
      <li> 
        <input type="radio" name="method" id="multiply" value="multiply" checked="checked">
        <label for="multiply">Multiply</label>
      </li>
      <li>
        <input type="radio" name="method" id="transpose" value="transpose"/>
        <label for="transpose">Transpose</label>
      </li>
      <li>
        <input type="radio" name="method" id="add" value="add"/>
        <label for="add">Addition</label>
      </li>
      <li>
        <input type="radio" name="method" id="substract" value="subtract"/>
        <label for="substract">Subtraction</label>
      </li>
    </ul>
    <div id="compute">
      <input class="btn btn-info" type="button" value="Compute"/>
    </div>
    <div id="answer"></div>
  </div>
  <script src="http://baopham.github.io/javascripts/custom/matrix.js" type="text/javascript"></script>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript and Canvas: Conway's Game of Life]]></title>
    <link href="http://baopham.github.io/blog/2011/07/03/javascript-and-canvas-conways-game-of-life/"/>
    <updated>2011-07-03T05:59:00-07:00</updated>
    <id>http://baopham.github.io/blog/2011/07/03/javascript-and-canvas-conways-game-of-life</id>
    <content type="html"><![CDATA[<p>Being inspired by my school project from CS111 <b>Introduction to Computation</b>, I implemented the game again in JavaScript and used HTML5 canvas to display the cells and animation (HTML5 browser support is required).</p>


<p><strong>Supported Browsers:</strong></p>

<ul>
<li>Firefox 4+</li>
<li>Google Chrome</li>
<li>Opera 10.6+</li>
<li>Apple Safari 4+</li>
<li>Internet Explorer 9</li>
</ul>


<!--more-->




<script src="http://baopham.github.io/javascripts/custom/life.js" type="text/javascript"></script>


<p><strong>From wikipedia:</strong></p>

<blockquote><p>  &#8220;The Game of Life, also known simply as Life, is a <a href="http://en.wikipedia.org/wiki/Cellular_automaton">cellular automaton</a> devised by the British mathematician <a href="http://en.wikipedia.org/wiki/John_Horton_Conway">John Horton Conway</a> in 1970<br/>
  <strong>Rules:</strong><br/>
   1.  Any live cell with fewer than two live neighbours dies, as if caused by under-population.<br/>
   2.  Any live cell with two or three live neighbours lives on to the next generation.<br/>
   3.  Any live cell with more than three live neighbours dies, as if by overcrowding.<br/>
   4.  Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.&#8221;</p></blockquote>

<p><canvas id="canvas_life"></canvas></p>

<div id="buttons_life">
    <button class="btn" id="generate" type="button">Generate Random Cells</button>
    <button class="btn" id="run" type="button">Run</button>
    <button class="btn" id="stop" type="button">Stop</button>
    <button class="btn" id="clear" type="button">Clear</button>
</div>

]]></content>
  </entry>
  
</feed>
